C51 COMPILER V9.52.0.0   TEMPERATURE                                                       04/26/2018 00:25:41 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TEMPERATURE
OBJECT MODULE PLACED IN temperature.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE temperature.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"  
   2          #include "ds18b20.h"
   3          
   4          bit read_flag = 0;
   5          
   6          void cls_buzz()
   7          {
   8   1        P2 = (P2&0x1F|0xA0);
   9   1        P0 = 0x00;
  10   1        P2 &= 0x1F;
  11   1      }
  12          
  13          
  14          // 读取串口输入，当输入符合要求时设定标志read_flag为1
  15          void serial() interrupt 4 using 3 {
  16   1        unsigned char ch;
  17   1        if (RI){
  18   2          RI = 0 ;
  19   2          ch = SBUF;
  20   2          if (ch == ' ')
  21   2            read_flag = 1; 
  22   2        }
  23   1      }
  24          
  25          // 串口初始化
  26          void init_uart() {  
  27   1          PCON &= 0x7F;      
  28   1          SCON = 0x50;          
  29   1          AUXR &= 0xBF;         
  30   1          AUXR &= 0xFE;        
  31   1          TMOD &= 0x0F;       
  32   1          TMOD |= 0x20;         
  33   1          TL1 = 0xFD;      
  34   1          TH1 = 0xFD;      
  35   1          ET1 = 0;          
  36   1          TR1 = 1;        
  37   1          EA = 1;
  38   1          ES = 1;
  39   1      }  
  40          
  41          // 串口 发送一个字节
  42          void Serial_Send_Char(unsigned char c) {
  43   1          SBUF = c;
  44   1          while(!TI);
  45   1          TI=0;
  46   1      }
  47          
  48          // 串口 发送一个16位无符号整数
  49          void Serial_Send_Integer(unsigned int num) {
  50   1          Serial_Send_Char(num / 256);
  51   1          Serial_Send_Char(num % 256);
  52   1      }
  53          
  54          // 等待请求 获得请求时通过串口返回温度
  55          void run() {
C51 COMPILER V9.52.0.0   TEMPERATURE                                                       04/26/2018 00:25:41 PAGE 2   

  56   1          int temperature = read_temperature();
  57   1          if(read_flag==1) {
  58   2              ES = 0;
  59   2              Serial_Send_Integer(temperature);
  60   2              ES=1;
  61   2              read_flag=0;
  62   2          }
  63   1      }
  64          
  65          void main() {   
  66   1          cls_buzz();
  67   1          init_uart();
  68   1          while(1)
  69   1              run();
  70   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    117    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
